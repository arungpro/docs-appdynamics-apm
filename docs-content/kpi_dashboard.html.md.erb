---
title: AppDynamics PCF KPI Dashboard
owner: Partners
---

## <a id='use-case'></a> Use Case

Pivotal Cloud Foundry (PCF) is a multi-cloud Platform as a Service (PaaS). It provides continuous delivery and supports the full application development lifecycle, from initial development through all testing stages to deployment. Cloud Foundryâ€™s container-based architecture runs apps in any programming language over a variety of cloud service providers.

The AppDynamics Monitoring Extension for PCF Firehose provides PCF Platform metrics generated by the Loggregator Firehose about the usage of its features and corresponding resources using a Nozzle. This release also includes an AppDynamics Machine Agent deployed as a BOSH release.


## <a id='use-case'></a> Overview and Use Case

The PCF KPI Dashboard visualizes performance of the PCF platform on which the AppDynamics tile is running. You can use this dashboard to view the following PCF performance metrics in a single pane of glass.

- [Key Performance Indicators (KPIs)](https://docs.pivotal.io/pivotalcf/2-0/monitoring/kpi.html) for monitoring Pivotal Cloud Foundry:
     - [Diego Auctioneer Metrics](https://docs.pivotal.io/pivotalcf/2-0/monitoring/kpi.html#auctioneer)
     - [Diego BBS Metrics](https://docs.pivotal.io/pivotalcf/2-0/monitoring/kpi.html#bbs)
     - [Diego Cell Metrics](https://docs.pivotal.io/pivotalcf/2-0/monitoring/kpi.html#cell)
     - [Diego Locket Metrics](https://docs.pivotal.io/pivotalcf/2-0/monitoring/kpi.html#locket)
     - [Diego Route Emitter Metrics](https://docs.pivotal.io/pivotalcf/2-0/monitoring/kpi.html#route_emitter)
     - [PAS MySQL KPIs](https://docs.pivotal.io/pivotalcf/2-0/monitoring/kpi.html#kpi4MySQL)
     - [Gorouter Metrics](https://docs.pivotal.io/pivotalcf/2-0/monitoring/kpi.html#gorouter)
     - [UAA Metrics](https://docs.pivotal.io/pivotalcf/2-0/monitoring/kpi.html#uaa)
     - [Firehose Metrics](https://docs.pivotal.io/pivotalcf/2-0/monitoring/kpi.html#doppler-server)
     - [System (BOSH) Metrics](https://docs.pivotal.io/pivotalcf/2-0/monitoring/kpi.html#bosh)

- [Key Capacity Scaling Indicators](https://docs.pivotal.io/pivotalcf/2-1/monitoring/key-cap-scaling.html):
     - [Diego Cell Capacity Scaling Indicators](https://docs.pivotal.io/pivotalcf/2-1/monitoring/key-cap-scaling.html#cell)
     - [Firehose Performance Scaling Indicators](https://docs.pivotal.io/pivotalcf/2-1/monitoring/key-cap-scaling.html#doppler-server)
     - [CF Syslog Drain Performance Scaling Indicators](https://docs.pivotal.io/pivotalcf/2-1/monitoring/key-cap-scaling.html#scalable-syslog)
     - [Router Performance Scaling Indicators](https://docs.pivotal.io/pivotalcf/2-1/monitoring/key-cap-scaling.html#Router)
     - [UAA Performance Scaling Indicators](https://docs.pivotal.io/pivotalcf/2-1/monitoring/key-cap-scaling.html#UAA)

The PCF Firehose Dashboard uses a set of custom Health Rules and key performance metrics to visualize performance of the PCF platform. The Health Rules and Dashboard are deployed in the AppDynamics Controller and application specified when the tile was set up.


## <a id='important-notes'></a> Important Notes

- To view the Dashboard, you must be logged in as a AppDynamics user with permissions to view custom metric dashboards.

- The Dashboard has the name: <_app name_>-<_tile name_>-PCF KPI Dashboard

- The Health Rule names start with <_tier_name_> and are created in the <_app_name_> specified when the tile was set up.

- The Dashboard and Health Rules are based on a template that assumes a minimal PCF foundation:
       - One instance of each PCF service: controller, controller_worker, etc.
       - Three (3) instances of the diego_cell service

- The Dashboard and Health Rules have default settings based on thresholds suggested by Pivotal. You might want to adjust these thresholds based on your specific deployment. For more information, see [Key Performance Indicators](https://docs.pivotal.io/pivotalcf/1-12/monitoring/kpi.html).

- If the PCF foundation has a different number of instances for any service, you can modify the deployed Dashboard and Health Rules to include the additional instances. For more information, see the [AppDynamics PCF Dashboard Generator](https://github.com/Appdynamics/pcf-dash-generator) repository on Github.

- If your organization deploys new PCF foundations using a fixed number of instances, you can also update the default platform dashboard and Health Rules to support this.

<!--
[//]: # TBD -- Need more info or links re last point....
-->

### <a id='references'></a> References

1. Dashboard reference: https://github.com/Appdynamics/pcf-dash-generator#pcf-dash-generator
